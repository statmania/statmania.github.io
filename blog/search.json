[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Stat Mania",
    "section": "",
    "text": "CRAN Package Submission Checklist\n\n\n\n\n\n\nR\n\n\npackage\n\n\nCRAN\n\n\nsubmission\n\n\n\nA comprehensive checklist for a smooth R package submission to CRAN.\n\n\n\n\n\nAug 29, 2025\n\n\nAbdullah Al Mahmud\n\n\n\n\n\n\n\n\n\n\n\n\nCommon hyphenated and non-hyphenated compound\n\n\n\n\n\n\nwords\n\n\nenglish\n\n\nielts\n\n\n\n\n\n\n\n\n\nAug 26, 2025\n\n\nAbdullah Al Mahmud\n\n\n\n\n\n\n\n\n\n\n\n\nPHP dashboard from a MySQL database\n\n\n\n\n\n\ndashboard\n\n\ncode\n\n\nphp\n\n\n\n\n\n\n\n\n\nAug 23, 2025\n\n\nAbdullah Al Mahmud\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nAug 23, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nAug 20, 2025\n\n\nTristan O‚ÄôMalley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn‚Äôt specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/phpdash/index.html",
    "href": "posts/phpdash/index.html",
    "title": "PHP dashboard from a MySQL database",
    "section": "",
    "text": "Let‚Äôs set up a LAMP stack on Pop!_OS and make a simple PHP dashboard from a MySQL database.\n\n\nüîπ Step 1: Install LAMP\nOpen a terminal and run:\n# Update package list\nsudo apt update\n\n# Install Apache\nsudo apt install apache2 -y\n\n# Install MySQL\nsudo apt install mysql-server -y\n\n# Secure MySQL (set root password, disable test DB, etc.)\nsudo mysql_secure_installation\n\n# Install PHP + common extensions\nsudo apt install php libapache2-mod-php php-mysql php-cli php-mbstring php-xml -y\nCheck versions:\napache2 -v\nphp -v\nmysql --version\nRestart services:\nsudo systemctl restart apache2\nsudo systemctl enable apache2\n\n\n\nüîπ Step 2: Set up Database\nEnter MySQL shell:\nsudo mysql\nCreate DB and table:\nCREATE DATABASE dashboard_db;\nUSE dashboard_db;\n\nCREATE TABLE stats (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(50),\n    value INT\n);\n\nINSERT INTO stats (name, value) VALUES\n('Users', 120),\n('Sales', 75),\n('Visitors', 300);\nExit MySQL:\nEXIT;\n\n\n\nüîπ Step 3: Set Web Root & Permissions\nDefault root is /var/www/html/.\nCreate a project folder:\nsudo mkdir /var/www/html/dashboard\nsudo chown -R $USER:$USER /var/www/html/dashboard\n\n\n\nüîπ Step 4: PHP Dashboard Script\nCreate index.php inside dashboard/:\n&lt;?php\n$host = \"localhost\";\n$user = \"root\"; // or your MySQL user\n$pass = \"\";     // set if you used one in mysql_secure_installation\n$db   = \"dashboard_db\";\n\n// Connect\n$conn = new mysqli($host, $user, $pass, $db);\n\n// Check\nif ($conn-&gt;connect_error) {\n    die(\"Connection failed: \" . $conn-&gt;connect_error);\n}\n\n// Fetch data\n$sql = \"SELECT name, value FROM stats\";\n$result = $conn-&gt;query($sql);\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;My Dashboard&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: Arial, sans-serif; margin: 40px; }\n        .card { display: inline-block; margin: 20px; padding: 20px;\n                border-radius: 12px; box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n                background: #f8f8f8; min-width: 120px; text-align: center; }\n        h2 { margin: 10px 0; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;üìä Simple PHP Dashboard&lt;/h1&gt;\n    &lt;?php while($row = $result-&gt;fetch_assoc()): ?&gt;\n        &lt;div class=\"card\"&gt;\n            &lt;h2&gt;&lt;?php echo $row['value']; ?&gt;&lt;/h2&gt;\n            &lt;p&gt;&lt;?php echo $row['name']; ?&gt;&lt;/p&gt;\n        &lt;/div&gt;\n    &lt;?php endwhile; ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n&lt;?php $conn-&gt;close(); ?&gt;\n\n\n\nüîπ Step 5: Test in Browser\nVisit: üëâ http://localhost/dashboard/\nYou should see 3 cards: Users, Sales, Visitors ‚Äî styled nicely.\n\n‚úÖ This is a short but comprehensive process:\n\nApache, MySQL, PHP installed\nDatabase + table created\nPHP script pulling live data into dashboard"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/ielts-hyphenated-words.html",
    "href": "posts/ielts-hyphenated-words.html",
    "title": "Common hyphenated and non-hyphenated compound",
    "section": "",
    "text": "These compound words have hyphens between them.\n\ncheck-in\ncheck-out\nrunner-up\npasser-by\nself-esteem\nself-service\nself-employed\nfull-time\npart-time\nmother-in-law / father-in-law (rare in IELTS but useful to know)\nbrother-in-law / sister-in-law\nson-in-law / daughter-in-law (plural: sons-in-law, not son-in-laws)\npasser-by\neditor-in-chief\ncommander-in-chief\nwell-known\nwell-developed\nup-to-date\nstate-of-the-art\nhigh-quality\nlow-cost\nfirst-class\nlong-term\nshort-term\nuser-friendly\nenergy-efficient\ncost-effective\nstress-free\nhands-on\ntime-consuming\nEnglish-speaking (e.g., ‚Äúan English-speaking country‚Äù)\npart-time / full-time (when used as adjectives: ‚Äúa part-time job‚Äù)\nmiddle-aged\n\nThese are non-hyphenated words\n\nairport\narmchair\nbackyard\nbabysitter\nbackpack\nbasketball\nbathroom\nbeachball\nbedroom\nblackboard\nbluebird\nbodyguard\nbookcase\nbookmark\nbookshelf\nbrainstorm\ncampsite\ncarpool\nchildcare\nclassroom\ncookbook\ncourtyard\ncrosswalk\ncupcake\ndaycare\ndishwasher\ndoorbell\ndoorknob\ndownstairs\ndriveway\nearthquake\neyelid\nfingernail\nfingerprint\nfireman\nflashlight\nfootprint\nfootball\ngirlfriend\ngreenhouse\nhaircut\nhandshake\nhandmade\nhomework\nhouseplant\nhousework\niceberg\nkeyboard\nlaptop\nlipstick\nmailbox\nmilkshake\nmoonlight\nnotebook\noatmeal\npancake\nplayground\npopcorn\nraincoat\nrainbow\nshoelace\nskateboard\nsnowball\nsnowflake\nsnowman\nsoftball\nspaceship\nspotlight\nsuitcase\nsunflower\nsunlight\nsuperman\nswimming pool\ntablecloth\ntablespoon\nteardrop\ntoothbrush\ntoothpaste\nupstairs\nvolleyball\nwallpaper\nwatermelon\nweekend\nwheelchair\nwindbreaker\nwindmill\nworkshop"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/r-package-submission.html",
    "href": "posts/r-package-submission.html",
    "title": "CRAN Package Submission Checklist",
    "section": "",
    "text": "Before submitting your R package to CRAN, you should go through a thorough checklist to ensure it meets all the requirements. Failure to meet these standards will result in rejection. The submission process is a manual review, and reviewers are strict about the rules.\n\n\n1. Code Quality and Checks\n\nPass R CMD check --as-cran without any errors, warnings, or notes. This is the most critical step. Run this command from your package‚Äôs root directory. Address every single issue.\nNo Hardcoded Paths: Don‚Äôt use absolute paths like C:/Users/User/my_file.csv. Use system.file() to locate files within your package.\nNo Non-Standard Library Dependencies: Ensure you are not using libraries that are not on CRAN or Bioconductor.\nPackage Size: CRAN has a size limit, which is typically around 5 MB, though larger packages are sometimes accepted if they are well-justified.\n\n\n\n\n2. Documentation and Metadata\n\nDESCRIPTION File: Ensure this file is complete and accurate.\n\nVersion: The version number should be in the format A.B.C (e.g., 1.0.0).\nTitle: This should be concise and capitalized.\nDescription: A detailed, multi-sentence description of what your package does.\nLicense: Specify a valid open-source license, such as MIT or GPL-3.\nURL and BugReports: Include links to your GitHub repository or website.\nImports: List all packages your code uses.\nSuggests: List packages used in examples or vignettes but not essential for core functionality.\n\nman/ Directory: All functions must have a .Rd help file, and all function arguments should be documented. The examples in the help files should be runnable.\nVignettes: Include at least one vignette (.Rmd file in the vignettes/ directory) that provides a user-friendly introduction to your package‚Äôs main features.\nNEWS.md: A file documenting changes between versions is highly recommended.\nREADME File: A comprehensive README.md file in the package‚Äôs root directory is standard practice.\n\n\n\n\n3. User Experience and Best Practices\n\nInformative Error Messages: Your functions should provide clear, user-friendly error messages with stop() and warning() when things go wrong.\nAvoid Namespace Pollution: Use :: to call functions from other packages (e.g., ggplot2::ggplot()) unless a package is attached with library(). This prevents conflicts between functions with the same name.\nMinimal Dependencies: Only import packages you absolutely need to.\nUnit Tests: While not strictly required for a first submission, having a comprehensive suite of unit tests using testthat is highly recommended. They protect against regressions in future versions.\nData: If your package includes data, it should be placed in the data/ directory and documented with a .Rd file.\n\n\n\n\n4. Submission\n\ncran-checks: Check your package against the cran-checks GitHub action if you‚Äôve set it up.\ndevtools::submit_cran(): This function from the devtools package automates much of the submission process, including creating the submission email.\nMaintain Patience: The review process can take anywhere from a few days to several weeks. Be ready to respond to reviewer feedback and make necessary changes."
  }
]