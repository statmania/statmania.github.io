[
  {
    "objectID": "index.html#data-science-tools",
    "href": "index.html#data-science-tools",
    "title": "Stat Mania",
    "section": " Data Science Tools",
    "text": "Data Science Tools\n\n\n\n\nMake a Bar Chart\n\n\nVisualize categorical data\n\nLearn More …\n\n\n\n\nGenerate Data\n\n\nTrack trends over time\n\nLearn More …\n\n\n\n\nHistogram Maker\n\n\nShow proportions clearly\n\nLearn More …\n\n\n\n\nPie Chart Maker\n\n\nUpload your own CSV\n\nLearn More …\n\n\n\n\nScatter Plot Maker\n\n\nUse regression or trees\n\nLearn More …\n\n\n\n\nAesthetic Equations\n\n\nEmbed code with output\n\nLearn More …"
  },
  {
    "objectID": "snippets.html",
    "href": "snippets.html",
    "title": "Code Snippets",
    "section": "",
    "text": "sed '/^$/d' file\n\n\n\nsed 's/^/-/' filename.txt\n\n\n\nsudo nautilus # or dolphin, thunar\n\n\n\nxdg-open filename\n\n\n\npwd\n\n\n\nThe example renames .jpg files. Modify as per your need.\nls -v | cat -n | while read n f; do mv -n \"$f\" \"$n.jpg\"; done\nTo start numbering at certain number use the following code\nnum=0; for i in *; do mv \"$i\" \"$(printf '%04d' $num).${i#*.}\"; ((num++)); done\nFor more on this, look here\n\n\n\nModify as per need\nrename 's/\\_/-/' *\n\n\nfor file in *' '*\ndo\n  mv -- \"$file\" \"${file// /-}\"\ndone\n\n\n\n\nrename 'y/A-Z/a-z/' *\n\n\n\nfind . -type f | wc -l\n\n\n\n`sed -i 's/$/\\n/' file.txt`\n\n\n\n#!/bin/bash\nlocal o=$IFS\nIFS=$(echo -en \"\\n\\b\")\n\nMP4FILE=$(ls . |grep .mp4)\nfor filename in $MP4FILE\ndo\nname=\"${filename%.*}\"\nffmpeg -i ./$filename -b:a 192K -vn ./$name.mp3\ndone\n\nIFS=o"
  },
  {
    "objectID": "snippets.html#nux",
    "href": "snippets.html#nux",
    "title": "Code Snippets",
    "section": "",
    "text": "sed '/^$/d' file\n\n\n\nsed 's/^/-/' filename.txt\n\n\n\nsudo nautilus # or dolphin, thunar\n\n\n\nxdg-open filename\n\n\n\npwd\n\n\n\nThe example renames .jpg files. Modify as per your need.\nls -v | cat -n | while read n f; do mv -n \"$f\" \"$n.jpg\"; done\nTo start numbering at certain number use the following code\nnum=0; for i in *; do mv \"$i\" \"$(printf '%04d' $num).${i#*.}\"; ((num++)); done\nFor more on this, look here\n\n\n\nModify as per need\nrename 's/\\_/-/' *\n\n\nfor file in *' '*\ndo\n  mv -- \"$file\" \"${file// /-}\"\ndone\n\n\n\n\nrename 'y/A-Z/a-z/' *\n\n\n\nfind . -type f | wc -l\n\n\n\n`sed -i 's/$/\\n/' file.txt`\n\n\n\n#!/bin/bash\nlocal o=$IFS\nIFS=$(echo -en \"\\n\\b\")\n\nMP4FILE=$(ls . |grep .mp4)\nfor filename in $MP4FILE\ndo\nname=\"${filename%.*}\"\nffmpeg -i ./$filename -b:a 192K -vn ./$name.mp3\ndone\n\nIFS=o"
  },
  {
    "objectID": "snippets.html#latex",
    "href": "snippets.html#latex",
    "title": "Code Snippets",
    "section": "Latex",
    "text": "Latex\n\nLong Comment\n\\iffalse\nThis is a long block of text that serves as a comment. It will be completely ignored by the LaTeX compiler and will not appear in the final output. You can write as many paragraphs as you like here. This is an excellent alternative to using the `comment` package.\n\\fi\n\n\nRestart Page-numbering\n\\newpage\n\\setcounter{page}{1}\n\n\nPush contents to bottom/right of page\n\\vfill contents to push to bottom\n\\hfill contents to push to right"
  },
  {
    "objectID": "snippets.html#r",
    "href": "snippets.html#r",
    "title": "Code Snippets",
    "section": "R",
    "text": "R\n\nQuit R from terminal in one go\nq(\"no\")\nor quit(save = \"no\")"
  },
  {
    "objectID": "snippets.html#python",
    "href": "snippets.html#python",
    "title": "Code Snippets",
    "section": "Python",
    "text": "Python\n\nStart a server\npython3 -m http.server"
  },
  {
    "objectID": "snippets.html#git",
    "href": "snippets.html#git",
    "title": "Code Snippets",
    "section": "Git",
    "text": "Git\n\nUndoing commit\ngit reset --soft HEAD~N\nUndoes the last N commits, but keeps the changes in the staging area.\ngit reset --mixed HEAD~N\nUndoes the last N commits, and unstages the changes, leaving them in the working directory.\ngit reset --hard HEAD~N\nUndoes the last N commits and discards all changes made in those commits from the working directory. Use with caution as this is a destructive operation.\n\n\nRename files with git\ngit mv old_file new_file\n\n\nPull if remote is ahead\ngit pull --rebase\n\n\nRevert all tracked files in the working directory\ngit checkout .\nTo clean untracked files as well:\ngit checkout .\ngit clean -fd\n\n\nRepository-specific confiuguration\ngit config --local user.name 'Your Name'\ngit config --local user.email 'your.work.email@company.com'\n\n\nGlobal confiuguration\n`git config --global user.name 'Your Name'`\ngit config --global user.email 'your.work.email@company.com'"
  },
  {
    "objectID": "snippets.html#quarto",
    "href": "snippets.html#quarto",
    "title": "Code Snippets",
    "section": "Quarto",
    "text": "Quarto\n\nRender all qmd files in the directory\nquarto render"
  },
  {
    "objectID": "snippets.html#excel-google-sheet",
    "href": "snippets.html#excel-google-sheet",
    "title": "Code Snippets",
    "section": "Excel / Google Sheet",
    "text": "Excel / Google Sheet\n\nMode for ordinal data\n=INDEX(UNIQUE(I2:I107), MATCH(MAX(COUNTIF(I2:I107, UNIQUE(I2:I107))), COUNTIF(I2:I107, UNIQUE(I2:I107)), 0))\n\n\nMedian for ordinal data\n=INDEX({\"Strongly Disagree\",\"Disagree\",\"Neither Agree nor Disagree\",\"Agree\",\"Strongly Agree\"}, MEDIAN(FILTER(MATCH(I1:I106, {\"Strongly Disagree\",\"Disagree\",\"Neither Agree nor Disagree\",\"Agree\",\"Strongly Agree\"}, 0), ISNUMBER(MATCH(I1:I106, {\"Strongly Disagree\",\"Disagree\",\"Neither Agree nor Disagree\",\"Agree\",\"Strongly Agree\"}, 0)))))"
  },
  {
    "objectID": "snippets.html#sql",
    "href": "snippets.html#sql",
    "title": "Code Snippets",
    "section": "SQL",
    "text": "SQL\n\nBasic workflow\n\nCreate DATABASE\nCREATE DATABASE dashboard_db;\n\n\n\nCreate table\nCREATE TABLE stats (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(50),\n    value INT\n);\n\n\nPut values\nINSERT INTO stats (name, value) VALUES\n('Users', 120),\n('Sales', 75),\n('Visitors', 300);\n\n\nLook and find data\nUSE dashboard_db;\nSHOW TABLES;\nDESCRIBE stats; -- Shows stats table summary\nEXIT"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources Links",
    "section": "",
    "text": "A GIS Crash Course using R\nIntroduction to R and Geographic Information Systems (GIS)"
  },
  {
    "objectID": "resources.html#gis",
    "href": "resources.html#gis",
    "title": "Resources Links",
    "section": "",
    "text": "A GIS Crash Course using R\nIntroduction to R and Geographic Information Systems (GIS)"
  },
  {
    "objectID": "resources.html#maps",
    "href": "resources.html#maps",
    "title": "Resources Links",
    "section": "Maps",
    "text": "Maps\n\nwww.worldclim.org\nwww.isric.org/explore/soilgrids"
  }
]